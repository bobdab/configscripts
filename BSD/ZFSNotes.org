* new notes 2015 for FreeBSD
* Format an external drive with ZFS, no GELI
The best tutorial is the man page for ZFS and the 20+ examples at the end
First check the existing disks:

#+BEGIN_SRC SHELL
gpart show -l
camcontrol devlist -v
#+END_SRC


If you attached a device with existing partitions, delete the partitions first, then destroy the label.  
This deletes the da2s4 by using =-i 4=:
#+BEGIN_SRC SHELL
gpart delete -i 4 da2
# after all partitions are deleted...
gpart destroy da2
#+END_SRC


I do not do the following because I want to use the whole disk:
#+BEGIN_SRC SHELL
# do not allocate partitions for ZFS... do not do this 
# unless you want to build a RAid that uses equal size chunks
# on different disks
gpart create -s GPT da2
gpart show da2
gpart add -b 34 -s 3600M -t freebsd-zfs da2
gpart show da2
#+END_SRC


Whole disk... Run the delete and destroy commands above, then try this:
#+BEGIN_SRC SHELL
# initialize an entire disk:
zpool create W500 /dev/da2
zpool list
#+END_SRC
The disk now appears to be mounted in /W500, but it is not writable



#+BEGIN_SRC SHELL
mkdir /junk
zfs create W500/junk1
zfs set mountpoint=/junk W500/junk1
zfs set compression=on W500/junk1
mkdir /junk/sam # can not put quota here because it is not a zfs data set from the 'zfs create' command
zfs set quota=10G W500/junk1
#+END_SRC

Get lots of info on a ZFS dataset
#+BEGIN_SRC SHELL
zfs get all W500/junk1
#+END_SRC


Ummount/detach a disk 
#+BEGIN_SRC SHELL
zfs unmount /junk
# OR
zfs unmount W500/junk1
#+END_SRC

Take the pool temporarily offline. which I don't think you want
to do. Use the -t option or else it will be offline in reboot.
#+BEGIN_SRC SHELL
zpool offline -t W500
#+END_SRC


REmove a disk from the pool -- ruins it if there is only one disk left:
#+BEGIN_SRC SHELL
zpool detach W500
# check data
zpool iostat -v W500
#+END_SRC

# Destroy before reformatting the dis:
#+BEGIN_SRC SHELL
zpool unmount W500/junk1
zpool destroy W500
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC

* ZFS over GELI

https://forums.freebsd.org/threads/howto-fde-freebsd-9-0-rc1-geli-zfs-on-root-with-boot-from-usb-stick.27618/

I will use the whole disk rather than a partition, so skip the first few steps
from the link (geli might be able to run without sudo)
#+BEGIN_SRC SHELL
glabel label W500 /dev/da2
geli init -b /dev/label/W500
geli attach  /dev/label/W500
#+END_SRC

Creation ZFS pool and FS:
#+BEGIN_SRC SHELL
mkdir /W500D
zpool create -O mountpoint=/W500D -O compression=on W500 /dev/label/W500.eli
zfs create -o mountpoint=/W500D/data W500/data
#+END_SRC



#+BEGIN_SRC SHELL
zfs set compression=on W500/data
mkdir /junk/sam # can not put quota here because it is not a zfs data set from the 'zfs create' command
zfs set quota=10G W500/data
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC

* Day-to Day
** reattach an encrypte USB-ZFS drive 
The man page for zfs and zpool are the best starting point.

I have a disk that is encrypted with GELI with ZFS over it.

Attach the disk to the USB port. 

Run =
#+BEGIN_SRC SHELL
 # verify that the disk label appears:
ls /dev/label 
# look for "W500" to appear or whatever you named it
sudo geli attach /dev/label/W500

#+END_SRC

ZFS should magically detect the disk and bring it online, but not mount it.
Mount it to the directory that I made called /W500D.  The datasets under it will appear.
#+BEGIN_SRC SHELL
zfs mount -o compress=on W500/data
zfs mount -o compress=on W500/arch
#+END_SRC

* footer



#+BEGIN_SRC SHELL
#+END_SRC


#+BEGIN_SRC SHELL
#+END_SRC

